/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.MentalHealthRepRole;

import Controller.DB4OModel.DB4OModel;
import Controller.Department.Department;
import Controller.Department.SupportDepartment;
import Controller.Enterprise.Enterprise;
import Controller.HealthNGO;
import Controller.Medicine.Medicine;
import Controller.Network.Network;
import Controller.Users.Users;
import Controller.WorkQueue.ClinicalCounsellingWorker;
import Controller.WorkQueue.PatientConditionsWorker;
import Controller.WorkQueue.PatientMedicineRequest;
import Controller.WorkQueue.PatientRequest;
import Controller.WorkQueue.PrescriptionNotesWorker;
import java.awt.CardLayout;
import java.awt.Component;
import java.io.File;
import java.nio.file.Files;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saamu
 */
@SuppressWarnings("unchecked")
public class MentalHealthRepWorkerPrescriptionRequestjPanel extends javax.swing.JPanel {

    /**
     * Creates new form MentalHealthWorkerjPanel
     */
    private HealthNGO system;
    private JPanel container,logincontainerJPanel;
    private Users user,patient,psychiatrist,ccm;
    private Department org,hospitalOrg,criticalcareOrg,patientCareOrg,adminsitrativeOrg,supportOrg;
    private DB4OModel dB4OModel = DB4OModel.getInstance();
    private Enterprise enterprise;
    private PatientRequest patientRequest=null;
    private PatientConditionsWorker conditionW;
    private ClinicalCounsellingWorker clinicalCW;
    private PatientMedicineRequest patientMedicines;
    private PrescriptionNotesWorker prescriptionNotesW;
    private String uploaded="";
    public MentalHealthRepWorkerPrescriptionRequestjPanel(JPanel logincontainerJPanel,JPanel container, Users user, HealthNGO system,PrescriptionNotesWorker prescriptionNotesW) {
        initComponents();
        this.system=system;
        this.container=container;
        this.logincontainerJPanel=logincontainerJPanel;
        this.enterprise=enterprise;
        this.prescriptionNotesW=prescriptionNotesW;
        this.criticalcareOrg=null;
        this.hospitalOrg=null;
        this.adminsitrativeOrg=null;
        this.patientCareOrg=null;
        this.supportOrg=null;
        this.user=user;
        this.loggedmhwjLabel.setText("Hi, "+user.toFullname()+"("+user.getRole()+")");
        
        this.patientRequest=prescriptionNotesW.getWorkOrderR();
//        this.patientMedicines=patientRequest.getPatientMedicinesR();
        this.patient=patientRequest.getSender();
        downloadjButton.setVisible(false);
        displayPatient();
        fillMedicinesComboBox();
        displayMedicineRequests();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        loggedmhwjLabel = new javax.swing.JLabel();
        mhwLogoutjButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        clinicalCounsellingjTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        medicinesjComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        quanityjTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        uploadjButton = new javax.swing.JButton();
        downloadjButton = new javax.swing.JButton();
        submitRequestjButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientsNotesjTextArea = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        patientstatusLabel = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        patientPrescriptionsjTextArea = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(0, 153, 153));

        jPanel1.setBackground(java.awt.SystemColor.window);
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        loggedmhwjLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        loggedmhwjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loggedmhwjLabel.setText("Logged Username");
        loggedmhwjLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        mhwLogoutjButton.setBackground(new java.awt.Color(255, 255, 204));
        mhwLogoutjButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        mhwLogoutjButton.setText("Logout");
        mhwLogoutjButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        mhwLogoutjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mhwLogoutjButtonActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jButton1.setText("<< Back");
        jButton1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loggedmhwjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(mhwLogoutjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(loggedmhwjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(mhwLogoutjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel3.setBackground(new java.awt.Color(0, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Specify Medicine with Quantity and Upload Prescription", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Medicine Requests", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        clinicalCounsellingjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request", "Medicine", "Quantity", "Status", "Result"
            }
        ));
        jScrollPane3.setViewportView(clinicalCounsellingjTable);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Medicine");

        medicinesjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Quantity");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Prescription");

        uploadjButton.setBackground(new java.awt.Color(204, 255, 204));
        uploadjButton.setText("Upload");
        uploadjButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        uploadjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadjButtonActionPerformed(evt);
            }
        });

        downloadjButton.setBackground(new java.awt.Color(204, 255, 204));
        downloadjButton.setText("Download");
        downloadjButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        downloadjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadjButtonActionPerformed(evt);
            }
        });

        submitRequestjButton.setBackground(new java.awt.Color(204, 255, 204));
        submitRequestjButton.setText("Submit Medicine Requests");
        submitRequestjButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        submitRequestjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitRequestjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(medicinesjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(quanityjTextField)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(uploadjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(392, 392, 392)
                                .addComponent(downloadjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(submitRequestjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(medicinesjComboBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quanityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uploadjButton, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(downloadjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitRequestjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Suicide Ideation Request", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Notes"));

        patientsNotesjTextArea.setEditable(false);
        patientsNotesjTextArea.setColumns(20);
        patientsNotesjTextArea.setRows(5);
        patientsNotesjTextArea.setEnabled(false);
        jScrollPane1.setViewportView(patientsNotesjTextArea);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Status");

        patientstatusLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        patientstatusLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder("Prescription"));

        patientPrescriptionsjTextArea.setEditable(false);
        patientPrescriptionsjTextArea.setColumns(20);
        patientPrescriptionsjTextArea.setRows(5);
        patientPrescriptionsjTextArea.setEnabled(false);
        jScrollPane5.setViewportView(patientPrescriptionsjTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientstatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patientstatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mhwLogoutjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mhwLogoutjButtonActionPerformed
        JLabel jLabel3;
        JLabel jLabel1;
        JPanel jPanel6;
    
        logincontainerJPanel.setVisible(true);
        container.removeAll();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.MatteBorder(null));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jLabel1.setText("You have been Logged Out. Please Login to Continue");

        jLabel3.setBackground(new java.awt.Color(0, 153, 153));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/withYouNGO - Copy.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(687, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(99, 99, 99)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 959, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(896, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(349, 349, 349)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(565, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(95, 95, 95)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(553, Short.MAX_VALUE)))
        );
        container.add(jPanel6);
    }//GEN-LAST:event_mhwLogoutjButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        MentalHealthRepWorkerPharmacyjPanel dwjp = (MentalHealthRepWorkerPharmacyjPanel) component;
        dwjp.displayPrescriptions();
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void submitRequestjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitRequestjButtonActionPerformed
        String quantity = quanityjTextField.getText().trim();
        Medicine  medicine = (Medicine) this.medicinesjComboBox.getSelectedItem();
        if(medicine==null){
            JOptionPane.showMessageDialog(this, "Please Choose Medicine", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(quantity.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please Specify Quantity of Medicine", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(uploaded.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Uploaded prescription", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int qty;
        try{
            qty=Integer.parseInt(quantity);
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Medicine Quantity Must be a Positive Integer Number.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
       
        int confirm=JOptionPane.showConfirmDialog(null, "Do You Want to Send Note And Prescription to patient?", "send Note and Prescription", JOptionPane.YES_NO_OPTION);
        if(confirm==0){
            patientRequest.setStatus("Medicine Requested");
            this.patientMedicines = new PatientMedicineRequest();
            patientMedicines.setMedicinename(medicine);
            patientMedicines.setMessage(prescriptionNotesW.getMessage());
            patientMedicines.setQuantity(qty);
            patientMedicines.setSender(user);
            patientMedicines.setUploaded(uploaded);
            patientMedicines.setStatus("Medicine Requested");
            patientMedicines.setWorkOrderR(patientRequest);
            prescriptionNotesW.setPatientMedicines(patientMedicines);
            patientRequest.setPatientMedicines(patientMedicines);
            for(Network network:system.getNetworkList()){
                for(Enterprise enterprises:network.getEnterpriseDirectory().getEnterpriseList()){
                    for(Department depart : enterprises.getDepartmentDirectory().getDepartmentList()){
                        if (depart instanceof SupportDepartment){
                            supportOrg = depart;
                            break;
                        }
                    }

                }
            }

            if(supportOrg==null){
                JOptionPane.showMessageDialog(null, "Addiction Issue not Sent");
                return;
            }
            supportOrg.getWorkQueue().getWorkRequestList().add(patientMedicines);
        
            quanityjTextField.setText("");
            JOptionPane.showMessageDialog(null, "You Have requested Medicine.");
            dB4OModel.storeSystem(system);
            displayPatient();
            displayMedicineRequests();
        }
    }//GEN-LAST:event_submitRequestjButtonActionPerformed

    private void uploadjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadjButtonActionPerformed
        JFileChooser upload=new JFileChooser(System.getProperty("user.dir"));
        File home=new File(System.getProperty("user.dir")+"/prescriptions");
        upload.setDialogTitle("Select Prescription to Upload");
        FileNameExtensionFilter filter=new FileNameExtensionFilter("JPG,PNG Or PDF","jpg","png","pdf");
        upload.setFileFilter(filter);
        File uploadFile=null;
        int statusReturn=upload.showOpenDialog(null);
        if(statusReturn==JFileChooser.APPROVE_OPTION){
            uploadFile=upload.getSelectedFile();
            File homepath=new File(home+"/"+uploadFile.getName());
            try{
                Files.copy(uploadFile.toPath(), homepath.toPath());
                this.uploadjButton.setText("ReUpload");
                this.downloadjButton.setVisible(true);
                this.downloadjButton.setText("Download: "+uploadFile.getName());
                uploaded=uploadFile.getName();
                JOptionPane.showMessageDialog(null, "Prescription Saved.\nPlease Submit Request");
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_uploadjButtonActionPerformed

    private void downloadjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadjButtonActionPerformed
        JFileChooser save=new JFileChooser(System.getProperty("home.dir"));
        File home=new File(System.getProperty("user.dir")+"/prescriptions/"+uploaded);

        save.setDialogTitle("Choose Where to Download to...");
        save.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        FileNameExtensionFilter filter=new FileNameExtensionFilter("JPG,PNG Or PDF","jpg","png","pdf");
        save.setFileFilter(filter);
        File savedFile=null;
        int statusReturn=save.showSaveDialog(this);
        if(statusReturn==JFileChooser.APPROVE_OPTION){
            savedFile=save.getSelectedFile();
            File savepath=new File(savedFile.getAbsoluteFile()+"/"+uploaded);
            try{
                Files.copy(home.toPath(), savepath.toPath());
                JOptionPane.showMessageDialog(null, "Your Have Downloaded Prescription");
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_downloadjButtonActionPerformed
    
    public void displayPatient(){
        this.patientstatusLabel.setText(prescriptionNotesW.getStatus());
        this.patientsNotesjTextArea.setText(prescriptionNotesW.getNotes());
        this.patientPrescriptionsjTextArea.setText(prescriptionNotesW.getMessage());
    }
    
    public void displayMedicineRequests(){                                           
        DefaultTableModel model = (DefaultTableModel) clinicalCounsellingjTable.getModel();
        model.setRowCount(0);
            for (PatientMedicineRequest order : patientRequest.getPatientMedicinesR()){
                Object[] row = new Object[5];
                String request=String.valueOf(order);
                if(request.contains("Controller.WorkQueue.PatientMedicineRequest")){
                    row[0] = order;
                    row[1] = order.getMedicinename();
                    row[2] = order.getQuantity();
                    row[3] = order.getStatus();
                    String result = ((PatientMedicineRequest)order).getRequesteResult();
                    row[4] = result == null ? "Waiting" : result;
                    model.addRow(row);
                }
            }
    }
    
    public void fillMedicinesComboBox() {
        medicinesjComboBox.removeAllItems();
        for (Medicine med : system.getMedicinedirectory().getMedicineList()) {
            medicinesjComboBox.addItem(med);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable clinicalCounsellingjTable;
    private javax.swing.JButton downloadjButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel loggedmhwjLabel;
    private javax.swing.JComboBox medicinesjComboBox;
    private javax.swing.JButton mhwLogoutjButton;
    private javax.swing.JTextArea patientPrescriptionsjTextArea;
    private javax.swing.JTextArea patientsNotesjTextArea;
    private javax.swing.JLabel patientstatusLabel;
    private javax.swing.JTextField quanityjTextField;
    private javax.swing.JButton submitRequestjButton;
    private javax.swing.JButton uploadjButton;
    // End of variables declaration//GEN-END:variables
}
