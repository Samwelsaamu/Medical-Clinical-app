/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.Sysadmin;

import Controller.DB4OModel.DB4OModel;
import Controller.Department.Department;
import Controller.Employee.Employee;
import Controller.Enterprise.Enterprise;
import Controller.HealthNGO;
import Controller.Network.Network;
import Controller.Role.AdministrationAssistanceRole;
import Controller.Role.Role;
import Controller.Users.Users;
import java.awt.CardLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saamu
 */
@SuppressWarnings("unchecked")
public class SysAdminWorkerEnterpriseAdminjPanel extends javax.swing.JPanel {

    /**
     * Creates new form MentalHealthWorkerjPanel
     */
    private HealthNGO system;
    private JPanel container,logincontainerJPanel,sysadminLoginjPanel,stardardLoginjPanel;
    private Users user;
    private DB4OModel dB4OModel = DB4OModel.getInstance();
    public SysAdminWorkerEnterpriseAdminjPanel(JPanel sysadminLoginjPanel,JPanel stardardLoginjPanel,JPanel logincontainerJPanel,JPanel container, Users user, HealthNGO system) {
        initComponents();
        this.system=system;
        this.container=container;
        this.logincontainerJPanel=logincontainerJPanel;
        this.user=user;
        this.loggedmhwjLabel.setText("Hi, "+user.getEmployee());
        this.sysadminLoginjPanel=sysadminLoginjPanel;
        this.stardardLoginjPanel=stardardLoginjPanel;
        this.updateEnterprisejButton.setVisible(false);
        this.deleteEnterprisejButton.setVisible(false);
        this.newEnterprisejButton.setVisible(false);
        String networkname="";
        for(Network network:system.getNetworkList()){
            networkname=network.getName();
        }
        this.networknamejLabel.setText(networkname);
        DisplayEnterpisesAdmins();
        fillNetworksComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        loggedmhwjLabel = new javax.swing.JLabel();
        mhwLogoutjButton = new javax.swing.JButton();
        networknamejLabel = new javax.swing.JLabel();
        sysQuitjButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterprisesadminjTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        adminfullnamejTextField = new javax.swing.JTextField();
        saveEnterprisejButton = new javax.swing.JButton();
        updateEnterprisejButton = new javax.swing.JButton();
        deleteEnterprisejButton = new javax.swing.JButton();
        newEnterprisejButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        networksjComboBox = new javax.swing.JComboBox();
        enterprisesjComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        adminusernamejTextField = new javax.swing.JTextField();
        adminpasswordjPasswordField = new javax.swing.JPasswordField();

        setBackground(new java.awt.Color(0, 153, 153));

        jPanel1.setBackground(java.awt.SystemColor.window);
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        loggedmhwjLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        loggedmhwjLabel.setText("Logged Username");
        loggedmhwjLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        mhwLogoutjButton.setBackground(new java.awt.Color(255, 255, 204));
        mhwLogoutjButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        mhwLogoutjButton.setText("Logout");
        mhwLogoutjButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        mhwLogoutjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mhwLogoutjButtonActionPerformed(evt);
            }
        });

        networknamejLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        networknamejLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        networknamejLabel.setText("Logged Network");
        networknamejLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        sysQuitjButton.setBackground(java.awt.SystemColor.window);
        sysQuitjButton.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        sysQuitjButton.setForeground(java.awt.Color.red);
        sysQuitjButton.setText("Lock");
        sysQuitjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sysQuitjButtonActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setText("<< Back");
        jButton1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(networknamejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(loggedmhwjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mhwLogoutjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sysQuitjButton)
                .addGap(12, 12, 12))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(loggedmhwjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(mhwLogoutjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(networknamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(sysQuitjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jScrollPane1.setBackground(java.awt.SystemColor.window);
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Your Enterprises", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        enterprisesadminjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Enterprise Name", "Network Name", "Fullname", "Username"
            }
        ));
        enterprisesadminjTable.setGridColor(java.awt.SystemColor.window);
        enterprisesadminjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterprisesadminjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(enterprisesadminjTable);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New/Edit Network Information", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Admin Fullname");

        saveEnterprisejButton.setBackground(new java.awt.Color(204, 255, 204));
        saveEnterprisejButton.setText("Save");
        saveEnterprisejButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        saveEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveEnterprisejButtonActionPerformed(evt);
            }
        });

        updateEnterprisejButton.setBackground(new java.awt.Color(204, 255, 204));
        updateEnterprisejButton.setText("Update");
        updateEnterprisejButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        updateEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEnterprisejButtonActionPerformed(evt);
            }
        });

        deleteEnterprisejButton.setBackground(new java.awt.Color(204, 255, 204));
        deleteEnterprisejButton.setText("Delete");
        deleteEnterprisejButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        deleteEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEnterprisejButtonActionPerformed(evt);
            }
        });

        newEnterprisejButton.setBackground(new java.awt.Color(204, 255, 204));
        newEnterprisejButton.setText("New");
        newEnterprisejButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        newEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEnterprisejButtonActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Networks");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Enterprises");

        networksjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networksjComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Username");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Password");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adminfullnamejTextField))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(enterprisesjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(networksjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adminusernamejTextField))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(updateEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteEnterprisejButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminpasswordjPasswordField)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(newEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                .addComponent(saveEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(networksjComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(enterprisesjComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addGap(6, 6, 6)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminfullnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminusernamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(adminpasswordjPasswordField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(saveEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mhwLogoutjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mhwLogoutjButtonActionPerformed
        JLabel jLabel3;
        JLabel jLabel1;
        JPanel jPanel6;
    
        logincontainerJPanel.setVisible(true);
        sysadminLoginjPanel.setVisible(false);
        stardardLoginjPanel.setVisible(true);
        container.removeAll();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.MatteBorder(null));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jLabel1.setText("You have been Logged Out. Please Login to Continue");

        jLabel3.setBackground(new java.awt.Color(0, 153, 153));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/withYouNGO - Copy.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(687, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(99, 99, 99)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 959, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(896, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(349, 349, 349)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(565, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(95, 95, 95)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(553, Short.MAX_VALUE)))
        );
        container.add(jPanel6);
    }//GEN-LAST:event_mhwLogoutjButtonActionPerformed

    private void sysQuitjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sysQuitjButtonActionPerformed
        JLabel jLabel3;
        JLabel jLabel1;
        JPanel jPanel6;
    
        logincontainerJPanel.setVisible(true);
        sysadminLoginjPanel.setVisible(true);
        stardardLoginjPanel.setVisible(false);
        container.removeAll();
        
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.MatteBorder(null));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jLabel1.setText("You have been Locked. Please Login to Authorize");

        jLabel3.setBackground(new java.awt.Color(0, 153, 153));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui/withYouNGO - Copy.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(687, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(99, 99, 99)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 959, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(896, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(349, 349, 349)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(568, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(95, 95, 95)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(553, Short.MAX_VALUE)))
        );
        
        container.add(jPanel6);
        
    }//GEN-LAST:event_sysQuitjButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void saveEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveEnterprisejButtonActionPerformed
        Network networkName = (Network) networksjComboBox.getSelectedItem();
        Enterprise enterprisename = (Enterprise) enterprisesjComboBox.getSelectedItem();
        
        String username = this.adminusernamejTextField.getText();
        String password = String.valueOf(this.adminpasswordjPasswordField.getPassword());
        String fullname = adminfullnamejTextField.getText();
        
        Role role = (Role) new AdministrationAssistanceRole();
        if (networkName == null || enterprisename == null) {
            JOptionPane.showMessageDialog(null, "Please Select Enterprise and its Network!");
            return;
        }
        if(fullname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Fill Fullname", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(fullname.length()<=5) {
            JOptionPane.showMessageDialog(this, "Fullname should be more than five characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(fullname.length()>120) {
            JOptionPane.showMessageDialog(this, "Fullname should be less than 120 characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Fill Admin Username", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(username.length()<=4) {
            JOptionPane.showMessageDialog(this, "Username Should be more than five characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(username.length()>120) {
            JOptionPane.showMessageDialog(this, "Username should be less than 120", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Specify Password", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(password.length()<=7) {
            JOptionPane.showMessageDialog(this, "Password should be more than Seven Characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(password.length()>120) {
            JOptionPane.showMessageDialog(this, "Password should be less tham 120 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Employee employee = enterprisename.getEmployeeDirectory().createEmployee(fullname);
        
        boolean unique=system.checkIfUserIsUnique(username);
        Enterprise inEnterprise=null;
        Department inDepartment=null;
        
        if(unique){
            //Step 2: Go inside each network and check each enterprise
            for(Network networks:system.getNetworkList()){
                //Step 2.a: check against each enterprise
                for(Enterprise enterprises:networks.getEnterpriseDirectory().getEnterpriseList()){
                    unique=enterprises.getUsersDirectory().checkIfUsernameIsUnique(username);
                    if(unique){
                       //Step 3:check against each organization for each enterprise
                       for(Department organizations:enterprises.getDepartmentDirectory().getDepartmentList()){
                           unique=organizations.getUsersDirectory().checkIfUsernameIsUnique(username);
                           if(!unique){
                               inEnterprise=enterprises;
                               inDepartment=organizations;
                               break;
                           }
                       }
                        
                    }
                    else{
                       inEnterprise=enterprises;
                       break;
                    }
                    if(inDepartment!=null){
                        break;
                    }  
                }
                if(inEnterprise!=null){
                    break;
                }
            }
        }
        
        if(!unique){
            JOptionPane.showMessageDialog(this, "Username Exists", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
            
        Users adminuser = enterprisename.getUsersDirectory().createUser(username, password, employee, role);
        JOptionPane.showMessageDialog(null, "Enterprise Admin Added");
        dB4OModel.storeSystem(system);
        DisplayEnterpisesAdmins();
    }//GEN-LAST:event_saveEnterprisejButtonActionPerformed

    private void deleteEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEnterprisejButtonActionPerformed
        int selectedRow = enterprisesadminjTable.getSelectedRow();
       
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select Enterprise Admin or Add.");
            adminfullnamejTextField.setText("");
            adminusernamejTextField.setText("");
            newEnterprisejButton.setVisible(false);
            updateEnterprisejButton.setVisible(false);
            deleteEnterprisejButton.setVisible(false);
            return;
        }
        Enterprise enterprise = (Enterprise) enterprisesadminjTable.getValueAt(selectedRow, 0);
        
        Users adminuser = (Users)enterprisesadminjTable.getValueAt(selectedRow, 3);
        Employee employee =adminuser.getEmployee();
        enterprise.getEmployeeDirectory().getEmployeeList().remove(employee);
        enterprise.getUsersDirectory().getUsersList().remove(adminuser);
        dB4OModel.storeSystem(system);
        DisplayEnterpisesAdmins();
    }//GEN-LAST:event_deleteEnterprisejButtonActionPerformed

    private void updateEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEnterprisejButtonActionPerformed
        int selectedRow = enterprisesadminjTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "No Enterprise Admin Selected");
            adminfullnamejTextField.setText("");
            adminfullnamejTextField.setText("");
            adminpasswordjPasswordField.setText("");
            newEnterprisejButton.setVisible(false);
            updateEnterprisejButton.setVisible(false);
            deleteEnterprisejButton.setVisible(false);
            return;
        }
        Network networkName = (Network) networksjComboBox.getSelectedItem();
        Enterprise enterprisename = (Enterprise) enterprisesjComboBox.getSelectedItem();
        
        String username = this.adminusernamejTextField.getText();
        String password = String.valueOf(this.adminpasswordjPasswordField.getPassword());
        String fullname = adminfullnamejTextField.getText();
        
        if (networkName == null || enterprisename == null) {
            JOptionPane.showMessageDialog(null, "Please Select Enterprise and its Network!");
            return;
        }
        if(fullname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Fill Fullname", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(fullname.length()<=5) {
            JOptionPane.showMessageDialog(this, "Fullname should be more than five characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(fullname.length()>120) {
            JOptionPane.showMessageDialog(this, "Fullname should be less than 120 characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Fill Admin Username", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(username.length()<=4) {
            JOptionPane.showMessageDialog(this, "Username Should be more than five characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(username.length()>120) {
            JOptionPane.showMessageDialog(this, "Username should be less than 120", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Specify Password", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(password.length()<=7) {
            JOptionPane.showMessageDialog(this, "Password should be more than Seven Characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(password.length()>120) {
            JOptionPane.showMessageDialog(this, "Password should be less tham 120 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
      
        boolean unique=system.checkIfUserIsUnique(username);
        Enterprise inEnterprise=null;
        Department inDepartment=null;
        
        if(unique){
            //Step 2: Go inside each network and check each enterprise
            for(Network networks:system.getNetworkList()){
                //Step 2.a: check against each enterprise
                for(Enterprise enterprises:networks.getEnterpriseDirectory().getEnterpriseList()){
                    unique=enterprises.getUsersDirectory().checkIfUsernameIsUnique(username);
                    if(unique){
                       //Step 3:check against each organization for each enterprise
                       for(Department organizations:enterprises.getDepartmentDirectory().getDepartmentList()){
                           unique=organizations.getUsersDirectory().checkIfUsernameIsUnique(username);
                           if(!unique){
                               inEnterprise=enterprises;
                               inDepartment=organizations;
                               break;
                           }
                       }
                        
                    }
                    else{
                       inEnterprise=enterprises;
                       break;
                    }
                    if(inDepartment!=null){
                        break;
                    }  
                }
                if(inEnterprise!=null){
                    break;
                }
            }
        }
        
        if(!unique){
            JOptionPane.showMessageDialog(this, "Username Exists", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
       
        Users adminuser = (Users)enterprisesadminjTable.getValueAt(selectedRow, 3);
        adminuser.setUsername(username);
        adminuser.setPassword(password);
        adminuser.getEmployee().setName(fullname);
        dB4OModel.storeSystem(system);
        DisplayEnterpisesAdmins();
    }//GEN-LAST:event_updateEnterprisejButtonActionPerformed

    private void newEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEnterprisejButtonActionPerformed
        adminfullnamejTextField.setText("");
        adminusernamejTextField.setText("");
        adminpasswordjPasswordField.setText("");
        newEnterprisejButton.setVisible(false);
        updateEnterprisejButton.setVisible(false);
        deleteEnterprisejButton.setVisible(false);
        saveEnterprisejButton.setVisible(true);
    }//GEN-LAST:event_newEnterprisejButtonActionPerformed

    private void enterprisesadminjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterprisesadminjTableMouseClicked
        int selectedRow = enterprisesadminjTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select Enterprise Admin or Add.");
            this.adminfullnamejTextField.setText("");
            this.adminusernamejTextField.setText("");
            this.newEnterprisejButton.setVisible(false);
            updateEnterprisejButton.setVisible(false);
            deleteEnterprisejButton.setVisible(false);
            saveEnterprisejButton.setVisible(true);
            return;
        }
        
        Users adminuser = (Users)enterprisesadminjTable.getValueAt(selectedRow, 3);
        adminusernamejTextField.setText(adminuser.getUsername());
        adminfullnamejTextField.setText(adminuser.getEmployee().getName());
        adminpasswordjPasswordField.setText(adminuser.getPassword());
        enterprisesjComboBox.setSelectedItem(enterprisesadminjTable.getValueAt(selectedRow, 0));
        this.networksjComboBox.setSelectedItem(enterprisesadminjTable.getValueAt(selectedRow, 1));
        newEnterprisejButton.setVisible(true);
        updateEnterprisejButton.setVisible(true);
        deleteEnterprisejButton.setVisible(true);
        saveEnterprisejButton.setVisible(false);
    }//GEN-LAST:event_enterprisesadminjTableMouseClicked

    private void networksjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networksjComboBoxActionPerformed
        Network network = (Network) networksjComboBox.getSelectedItem();
        if (network != null){
            fillEnterpriseComboBox(network);
        }
    }//GEN-LAST:event_networksjComboBoxActionPerformed

    private void DisplayEnterpisesAdmins() {
        DefaultTableModel model = (DefaultTableModel) enterprisesadminjTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (Users users : enterprise.getUsersDirectory().getUsersList()) {
                    Object[] row = new Object[4];
                    row[0] = enterprise;
                    row[1] = network.getName();
                    row[2] = users.getEmployee();
                    row[3] = users;
                    model.addRow(row);
                }
            }
        }
    }

    private void fillNetworksComboBox(){
        networksjComboBox.removeAllItems();
        for (Network network : system.getNetworkList()) {
            networksjComboBox.addItem(network);
        }
    }
    
    private void fillEnterpriseComboBox(Network network){
        enterprisesjComboBox.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            enterprisesjComboBox.addItem(enterprise);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adminfullnamejTextField;
    private javax.swing.JPasswordField adminpasswordjPasswordField;
    private javax.swing.JTextField adminusernamejTextField;
    private javax.swing.JButton deleteEnterprisejButton;
    private javax.swing.JTable enterprisesadminjTable;
    private javax.swing.JComboBox enterprisesjComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel loggedmhwjLabel;
    private javax.swing.JButton mhwLogoutjButton;
    private javax.swing.JLabel networknamejLabel;
    private javax.swing.JComboBox networksjComboBox;
    private javax.swing.JButton newEnterprisejButton;
    private javax.swing.JButton saveEnterprisejButton;
    private javax.swing.JButton sysQuitjButton;
    private javax.swing.JButton updateEnterprisejButton;
    // End of variables declaration//GEN-END:variables
}
